{"version":3,"sources":["pypyjs.js"],"names":[],"mappings":"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","file":"pypyjs.js","sourcesContent":["//\n//  pypyjs:  an experimental in-browser python environment.\n//\n\n// When transpiled from es6 to es5, this code will get wrapped\n// in a function that takes the encosing global scope as argument.\n// This might be the 'window' object in a browser, or the 'global'\n// object in nodejs.\n\nif (typeof globalScope === 'undefined') {\n  globalScope = {};\n}\n\nlet _dirname;\n\n// Find the directory containing this very file.\n// It can be quite difficult depending on execution environment...\nif (typeof __dirname === 'undefined') {\n  _dirname = './';\n\n  // A little hackery to find the URL of this very file.\n  // Throw an error, then parse the stack trace looking for filenames.\n  const errlines = (new Error()).stack.split('\\n');\n  errlines.forEach((line) => {\n    const match = /(at Anonymous function \\(|at |@)(.+\\/)pypyjs.js/.exec(line);\n    if (match) {\n      _dirname = match[2];\n    }\n  });\n} else {\n  _dirname = __dirname;\n}\n\nif (_dirname.charAt(_dirname.length - 1) !== '/') {\n  _dirname += '/';\n}\n\n\n// Ensure we have references to 'Promise' and 'FunctionPromise'\n// constructors, pulling them in from global scope if possible.\nlet Promise;\nlet FunctionPromise;\n\n// Ensure we have reference to a 'Promise' constructor.\nif (typeof Promise === 'undefined') {\n  if (globalScope && typeof globalScope.Promise !== 'undefined') {\n    Promise = globalScope.Promise;\n  } else if (typeof require === 'function') {\n    Promise = require('./Promise.min.js');\n  } else if (typeof load === 'function') {\n    load(_dirname + 'Promise.min.js');\n    if (typeof Promise === 'undefined') {\n      if (globalScope && typeof globalScope.Promise !== 'undefined') {\n        Promise = globalScope.Promise;\n      }\n    }\n  }\n}\n\nif (typeof Promise === 'undefined') {\n  throw new Error('Promise object not found');\n}\n\n// Ensure we have reference to a 'FunctionPromise' constructor.\nif (typeof FunctionPromise === 'undefined') {\n  if (globalScope && typeof globalScope.FunctionPromise !== 'undefined') {\n    FunctionPromise = globalScope.FunctionPromise;\n  } else if (typeof require === 'function') {\n    FunctionPromise = require('./FunctionPromise.js');\n  } else if (typeof load === 'function') {\n    load(_dirname + 'FunctionPromise.js');\n    if (typeof FunctionPromise === 'undefined') {\n      if (globalScope && typeof globalScope.FunctionPromise !== 'undefined') {\n        FunctionPromise = globalScope.FunctionPromise;\n      }\n    }\n  }\n}\n\nif (typeof FunctionPromise === 'undefined') {\n  throw new Error('FunctionPromise object not found');\n}\n\nlet fs;\nlet path;\n// Some extra goodies for nodejs.\nif (typeof process !== 'undefined') {\n  if (Object.prototype.toString.call(process) === '[object process]') {\n    fs = require('fs');\n    path = require('path');\n  }\n}\n\n// Create functions for handling default stdio streams.\n// These will be shared by all VM instances by default.\n//\n// We default stdout and stderr to process outputs if available,\n// printing/logging functions otherwise, and /dev/null if nothing\n// else is available.  Unfortunately there's no good way to read\n// synchronously from stdin in javascript, so that's always /dev/null.\n\nconst devNull = {\n  stdin: function stdin() {\n    return null;\n  },\n  stdout: function stdout() { },\n  stderr: function stderr() { }\n};\n\nconst stdio = {\n  stdin: null,\n  stdout: null,\n  stderr: null\n};\n\nstdio.stdin = devNull.stdin;\n\nif (typeof process !== 'undefined') {\n  if (typeof process.stdout !== 'undefined') {\n    stdio.stdout = function stdout(byte) { process.stdout.write(byte); };\n  }\n\n  if (typeof process.stderr !== 'undefined') {\n    stdio.stderr = function stderr(byte) { process.stderr.write(byte); };\n  }\n}\n\nlet _print;\nlet _printErr;\nif (typeof window === 'undefined') {\n  // print, printErr from v8, spidermonkey\n  if (typeof print !== 'undefined') {\n    _print = print;\n  }\n\n  if (typeof printErr !== 'undefined') {\n    _printErr = printErr;\n  }\n}\n\nif (typeof console !== 'undefined') {\n  if (typeof _print === 'undefined') {\n    _print = console.log.bind(console);\n  }\n\n  if (typeof _printErr === 'undefined') {\n    _printErr = console.error.bind(console);\n  }\n}\n\nif (stdio.stdout === null && typeof _print !== 'undefined') {\n  // print()/console.log() will add a newline, so we buffer until we\n  // receive one and then let it add it for us.\n  const buffer = [];\n  stdio.stdout = function stdout(data) {\n    for (let i = 0; i < data.length; i++) {\n      const byte = data.charAt(i);\n      if (byte !== '\\n') {\n        buffer.push(byte);\n      } else {\n        _print(buffer.join(''));\n        buffer.splice(undefined, buffer.length);\n      }\n    }\n  };\n}\n\nif (stdio.stderr === null && typeof _printErr !== 'undefined') {\n  // printErr()/console.error() will add a newline, so we buffer until we\n  // receive one and then let it add it for us.\n  const buffer = [];\n  stdio.stderr = function stderr(data) {\n    for (let i = 0; i < data.length; i++) {\n      const byte = data.charAt(i);\n      if (byte !== '\\n') {\n        buffer.push(byte);\n      } else {\n        _printErr(buffer.join(''));\n        buffer.splice(undefined, buffer.length);\n      }\n    }\n  };\n}\n\nif (stdio.stdout === null) {\n  stdio.stdout = devNull.stdout;\n}\n\nif (stdio.stderr === null) {\n  stdio.stderr = devNull.stderr;\n}\n\n// Main class representing the PyPy VM.\n// This is our primary export and return value.\n\nfunction pypyjs(opts) {\n  const _opts = opts || {};\n  this.rootURL = _opts.rootURL;\n  this.totalMemory = _opts.totalMemory || 128 * 1024 * 1024;\n  this.autoLoadModules = _opts.autoLoadModules || true;\n  this._pendingModules = {};\n  this._loadedModules = {};\n  this._allModules = {};\n\n  // Allow opts to override default IO streams.\n  this.stdin = _opts.stdin || stdio.stdin;\n  this.stdout = _opts.stdout || stdio.stdout;\n  this.stderr = _opts.stderr || stdio.stderr;\n\n  // Default to finding files relative to this very file.\n  if (!this.rootURL && !pypyjs.rootURL) {\n    pypyjs.rootURL = _dirname;\n  }\n\n  if (this.rootURL && this.rootURL.charAt(this.rootURL.length - 1) !== '/') {\n    this.rootURL += '/';\n  }\n\n  // If we haven't already done so, fetch and load the code for the VM.\n  // We do this once and cache the result for re-use, so that we don't\n  // have to pay asmjs compilation overhead each time we create the VM.\n\n  if (!pypyjs._vmBuilderPromise) {\n    pypyjs._vmBuilderPromise = this.fetch('pypyjs.vm.js').then((xhr) => {\n      // Parse the compiled code, hopefully asynchronously.\n      // Unfortunately our use of Function constructor here doesn't\n      // play very well with nodejs, where things like 'module' and\n      // 'require' are not in the global scope.  We have to pass them\n      // in explicitly as arguments.\n      const funcBody = [\n\n        // This is the compiled code for the VM.\n        xhr.responseText,\n        '\\n',\n\n        // Ensure that some functions are available on the Module,\n        // for linking with jitted code.\n        'if (!Module._jitInvoke && typeof _jitInvoke !== \\'undefined\\') {',\n        '  Module._jitInvoke = _jitInvoke;',\n        '}',\n\n        // Keep some functions that are not exported by default, but\n        // which appear in this scope when evaluating the above.\n        'Module._emjs_make_handle = _emjs_make_handle;',\n        'Module._emjs_free = _emjs_free;',\n\n        // Call dependenciesFulfilled if it won't be done automatically.\n        'dependenciesFulfilled=function() { inDependenciesFulfilled(FS); };',\n        'if(typeof memoryInitializer===\"undefined\"||!memoryInitializer||(!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER))dependenciesFulfilled();',\n      ].join('\\r\\n');\n      return new FunctionPromise('Module', 'inDependenciesFulfilled', 'require',\n                             'module', '__filename', '_dirname', funcBody);\n    });\n  }\n\n  // Create a new instance of the compiled VM, bound to local state\n  // and a local Module object.\n  this._ready = new Promise((resolve, reject) => {\n    // Initialize the Module object.\n    // We make it available on this object so that we can use\n    // its methods to execute code in the VM.\n    const Module = {};\n    this._module = Module;\n    Module.TOTAL_MEMORY = this.totalMemory;\n\n    // We will set up the filesystem manually when we're ready.\n    Module.noFSInit = true;\n    Module.thisProgram = '/lib/pypyjs/pypyjs.js';\n    Module.filePackagePrefixURL = this.rootURL || pypyjs.rootURL;\n    Module.memoryInitializerPrefixURL = this.rootURL || pypyjs.rootURL;\n    Module.locateFile = function locateFile(name) {\n      return (this.rootURL || pypyjs.rootURL) + name;\n    };\n\n    // Don't start or stop the program, just set it up.\n    // We'll call the API functions ourself.\n    Module.noInitialRun = true;\n    Module.noExitRuntime = true;\n\n    let stdoutBuffer = [];\n    // Route stdin to an overridable method on the object.\n    const stdin = () => {\n      if (stdoutBuffer.length) {\n        this.stdout(stdoutBuffer.join(''));\n        stdoutBuffer = [];\n      }\n      return this.stdin();\n    };\n\n    // Route stdout to an overridable method on the object.\n    // We buffer the output for efficiency.\n    const stdout = (byte) => {\n      const char = String.fromCharCode(byte);\n      stdoutBuffer.push(char);\n      if (char === '\\n' || stdoutBuffer.length >= 128) {\n        this.stdout(stdoutBuffer.join(''));\n        stdoutBuffer = [];\n      }\n    };\n\n    // Route stderr to an overridable method on the object.\n    // We do not buffer stderr.\n    const stderr = (byte) => this.stderr(String.fromCharCode(byte));\n\n    // This is where execution will continue after loading\n    // the memory initialization data, if any.\n    let initializedResolve;\n    let initializedReject;\n    const initializedP = new Promise(function promise(_resolve, _reject) {\n      initializedResolve = _resolve;\n      initializedReject = _reject;\n    });\n\n    const dependenciesFulfilled = (_fs) => {\n      this.FS = _fs;\n\n      // Initialize the filesystem state.\n      try {\n        this.FS.init(stdin, stdout, stderr);\n        Module.FS_createPath('/', 'lib/pypyjs/lib_pypy', true, false);\n        // Hackery so the same file will work with py2 and py3.\n        // We only ever put our module files into lib_pypy.\n        Module.FS_createPath('/', 'lib/pypyjs/lib-python/2.7', true, false);\n        Module.FS_createPath('/', 'lib/pypyjs/lib-python/3', true, false);\n        initializedResolve();\n      } catch (err) {\n        initializedReject(err);\n      }\n    };\n\n    // Begin fetching the metadata for available python modules.\n    // With luck these can download while we jank around compiling\n    // all of that javascript.\n    // XXX TODO: also load memory initializer this way.\n    const moduleDataP = this.fetch('modules/index.json');\n\n    pypyjs._vmBuilderPromise.then((vmBuilder) => {\n      const args = [\n        Module,\n        dependenciesFulfilled,\n        typeof require === 'undefined' ? undefined : require,\n        typeof module === 'undefined' ? undefined : module,\n        typeof __filename === 'undefined' ? undefined : __filename,\n        typeof _dirname === 'undefined' ? undefined : _dirname\n      ];\n\n      // This links the async-compiled module into our Module object.\n      vmBuilder.apply(null, args);\n      return initializedP;\n    }).then(() => {\n      // Continue with processing the downloaded module metadata.\n      return moduleDataP.then((xhr) => {\n        // Store the module index, and load any preload modules.\n        const modIndex = JSON.parse(xhr.responseText);\n        this._allModules = modIndex.modules;\n        if (modIndex.preload) {\n          Object.keys(modIndex.preload).forEach((name) => {\n            this._writeModuleFile(name, modIndex.preload[name]);\n          });\n        }\n\n        // It's finally safe to launch the VM.\n        Module.run();\n        Module._rpython_startup_code();\n        let pypy_home = Module.intArrayFromString('/lib/pypyjs/pypyjs.js');\n        pypy_home = Module.allocate(pypy_home, 'i8', Module.ALLOC_NORMAL);\n        Module._pypy_setup_home(pypy_home, 0);\n        Module._free(pypy_home);\n        const initCode = `\nimport js\nimport traceback\nimport sys; sys.platform = 'js'\n# For python3, pypy does some lazy-initialization stuff\n# with stdio streams that isn't triggered when you use\n# it as a library instead of an exe.  Fix it up.\ndef create_stdio(fd, mode, name, errors=None):\n  import io\n  return io.open(fd, mode, buffering=1, errors=errors, closefd=False)\nif not hasattr(sys, 'stdin'):\n  sys.stdin = sys.__stdin__ = create_stdio(0, 'r', '<stdin>')\n  sys.stdout = sys.__stdout__ = create_stdio(1, 'w', '<stdout>')\n  sys.stderr = sys.__stderr = create_stdio(2, 'w', '<stderr>', 'backslashreplace')\n# Create a \"__main__\" module in which we'll execute code.\nimport types\ntop_level_scope = {'__name__': '__main__', '__package__': None}\nmain = types.ModuleType('__main__')\nmain.__dict__.update(top_level_scope)\nsys.modules['__main__'] = main\ntop_level_scope = main`;\n\n        let code = Module.intArrayFromString(initCode);\n        code = Module.allocate(code, 'i8', Module.ALLOC_NORMAL);\n        if (!code) {\n          throw new pypyjs.Error('Failed to allocate memory');\n        }\n\n        const res = Module._pypy_execute_source(code);\n        if (res < 0) {\n          throw new pypyjs.Error('Failed to execute python code');\n        }\n\n        Module._free(code);\n      });\n    })\n    .then(resolve, reject);\n  });\n}\n\n// A simple file-fetching wrapper around XMLHttpRequest,\n// that treats paths as relative to the pypyjs.js root url.\n//\npypyjs.prototype.fetch = function fetch(relpath, responseType) {\n  const rootURL = this.rootURL || pypyjs.rootURL;\n\n  // For the web, use XMLHttpRequest.\n  if (typeof XMLHttpRequest !== 'undefined') {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onload = function onload() {\n        if (xhr.status >= 400) {\n          reject(xhr);\n        } else {\n          resolve(xhr);\n        }\n      };\n\n      xhr.open('GET', rootURL + relpath, true);\n      xhr.responseType = responseType || 'text';\n      xhr.send(null);\n    });\n  }\n\n  // For nodejs, use fs.readFile.\n  if (typeof fs !== 'undefined' && typeof fs.readFile !== 'undefined') {\n    return new Promise((resolve, reject) => {\n      fs.readFile(path.join(rootURL, relpath), (err, data) => {\n        if (err) return reject(err);\n        resolve({ responseText: data.toString() });\n      });\n    });\n  }\n\n  // For spidermonkey, use snarf (which has a binary read mode).\n  if (typeof snarf !== 'undefined') {\n    return new Promise((resolve) => {\n      const data = snarf(rootURL + relpath);\n      resolve({ responseText: data });\n    });\n  }\n\n  // For d8, use read() and readbuffer().\n  if (typeof read !== 'undefined' && typeof readbuffer !== 'undefined') {\n    return new Promise((resolve) => {\n      const data = read(rootURL + relpath);\n      resolve({ responseText: data });\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    reject('unable to fetch files');\n  });\n};\n\nfunction _escape(value) {\n  return value.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, '\\\\\\'');\n}\n\n// Method to execute python source directly in the VM.\n//\n// This is the basic way to push code into the pypyjs VM.\n// Calling code should not use it directly; rather we use it\n// as a primitive to build up a nicer execution API.\n//\npypyjs.prototype._execute_source = function _execute_source(code) {\n  const Module = this._module;\n  let code_ptr;\n\n  return new Promise(function promise(resolve, reject) {\n    const _code = `try:\n  ${code.trim()}\nexcept Exception:\n  typ, val, tb = sys.exc_info()\n  err_name = getattr(typ, '__name__', str(typ))\n  err_msg = str(val)\n  err_trace = traceback.format_exception(typ, val, tb)\n  err_trace = err_trace[:1] + err_trace[2:]\n  err_trace = ''.join(err_trace)\n  js.globals['pypyjs']._lastErrorName = err_name\n  js.globals['pypyjs']._lastErrorMessage = err_msg\n  js.globals['pypyjs']._lastErrorTrace = err_trace\n`;\n\n    const code_chars = Module.intArrayFromString(_code);\n    code_ptr = Module.allocate(code_chars, 'i8', Module.ALLOC_NORMAL);\n    if (!code_ptr) {\n      throw new pypyjs.Error('Failed to allocate memory');\n    }\n\n    const res = Module._pypy_execute_source(code_ptr);\n    if (res < 0) {\n      throw new pypyjs.Error('Error executing python code');\n    }\n\n    Module._free(code_ptr);\n\n    // XXX TODO: races/re-entrancy on _lastError?\n    if (pypyjs._lastErrorName) {\n      const err = new pypyjs.Error(\n        pypyjs._lastErrorName,\n        pypyjs._lastErrorMessage,\n        pypyjs._lastErrorTrace\n      );\n      pypyjs._lastErrorName = null;\n      pypyjs._lastErrorMessage = null;\n      pypyjs._lastErrorTrace = null;\n      reject(err);\n    }\n\n    resolve(null);\n  });\n};\n\n// Method to determine when the interpreter is ready.\n//\n// This method returns a promise that will resolve once the interpreter\n// is ready for use.\n//\npypyjs.prototype.ready = function ready() {\n  return this._ready;\n};\n\n// Method to execute some python code.\n//\n// This passes the given python code to the VM for execution.\n// It's fairly directly analogous to the 'exec\" statement in python.\n// It is not possible to directly access the result of the code, if any.\n// Rather you should store it into a variable and then use the get() method.\n//\npypyjs.prototype.exec = function exec(code, options) {\n  return this._ready.then(() => {\n    let promise = Promise.resolve();\n\n    // Find any \"import\" statements in the code,\n    // and ensure the modules are ready for loading.\n    if (this.autoLoadModules) {\n      promise = promise.then(() => {\n        return this.findImportedNames(code);\n      })\n      .then((imports) => {\n        return this.loadModuleData.apply(this, imports);\n      });\n    }\n\n    let _code;\n\n    if (options && options.file) {\n      try {\n        this.Module.FS.unlink(options.file);\n      } catch (e) {\n        if (e.errno !== 2) {\n          console.error(e);\n        }\n      }\n      this.Module.FS_createDataFile(options.file, '', code, true, false, true);\n      // Now we can execute the code in custom top-level scope.\n      _code = `top_level_scope['__file__'] = '${options.file}'; execfile('${options.file}', top_level_scope.__dict__)`;\n    } else {\n      _code = `exec('''${_escape(code)}''', top_level_scope.__dict__)`;\n    }\n\n    return promise.then(() => this._execute_source(_code));\n  });\n};\n\n// Method to evaluate an expression.\n//\n// This method evaluates an expression and returns its value (assuming the\n// value can be translated into javascript).  It's fairly directly analogous\n// to the \"eval\" function in python.\n//\n// For backwards-compatibility reasons, it will also evaluate statements.\n// This behaviour is deprecated and will be removed in a future release.\n//\npypyjs.prototype.eval = function evaluate(expr) {\n  return this._ready.then(() => {\n    // First try to execute it as an expression.\n    const code = `r = eval('${_escape(expr)}', top_level_scope.__dict__)`;\n    return this._execute_source(code);\n  }).then(() => this.get('r', true), (err) => {\n    if (err && err.name && err.name !== 'SyntaxError') {\n      throw err;\n    }\n\n    // If that failed, try again via exec().\n    if (typeof console !== 'undefined') {\n      console.warn('Calling pypyjs.eval() with statements is deprecated.');\n      console.warn('Use eval() for expressions, exec() for statements.');\n    }\n\n    return this.exec(expr);\n  });\n};\n\n// Method to evaluate some python code from a file..\n//\n// This fetches the named file and passes it to the VM for execution.\n//\npypyjs.prototype.execfile = function execfile(filename) {\n  return this.fetch(filename).then((xhr) => {\n    const code = xhr.responseText;\n    return this.exec(code, { file: `/lib/pypyjs/lib_pypy/${filename}` });\n  });\n};\n\n// Method to read a python variable.\n//\n// This tries to convert the value in the named python variable into an\n// equivalent javascript value and returns it.  It will fail if the variable\n// does not exist or contains a value that cannot be converted.\n//\npypyjs._resultsID = 0;\npypyjs._resultsMap = {};\npypyjs.prototype.get = function get(name, _fromGlobals) {\n  const resid = `${(pypyjs._resultsID++)}`;\n  let reference;\n  // We can read from global scope for internal use; don't do this from calling code!\n  if (_fromGlobals) {\n    reference = `globals()['${escape(name)}']`;\n  } else {\n    reference = `top_level_scope.${_escape(name)}`;\n  }\n\n  return this._ready.then(() => {\n    const code = `\n  try:\n    _pypyjs_getting = ${reference}\n  except (KeyError, AttributeError):\n    _pypyjs_getting = js.undefined\n  js.globals['pypyjs']._resultsMap['${resid}'] = js.convert(_pypyjs_getting)\n  del _pypyjs_getting`;\n    return this._execute_source(code);\n  }).then(() => {\n    const res = pypyjs._resultsMap[resid];\n    delete pypyjs._resultsMap[resid];\n    return res;\n  });\n};\n\n// Method to set a python variable to a javascript value.\n//\n// This generates a handle to the given object, and arranges for the named\n// python variable to reference it via that handle.\n//\npypyjs.prototype.set = function set(name, value) {\n  return this._ready.then(() => {\n    const Module = this._module;\n    const handle = Module._emjs_make_handle(value);\n    const _name = _escape(name);\n    const code = `top_level_scope.${_name} = js.Value(${handle})`;\n    return this._execute_source(code);\n  });\n};\n\n// Method to run an interactive REPL.\n//\n// This method takes takes callback function implementing the user\n// input prompt, and runs a REPL loop using it.  The prompt function\n// may either return the input as a string, or a promise resolving to\n// the input as a string.  If not specified, we read from stdin (which\n// works fine in e.g. nodejs, but is almost certainly not what you want\n// in the browser, because it's blocking).\n//\npypyjs.prototype.repl = function repl(prmpt) {\n  let _prmpt;\n  if (!prmpt) {\n    // By default we read from the provided stdin function, but unfortunately\n    // it defaults to a closed file.\n    let buffer = '';\n    _prmpt = (ps1) => {\n      let input;\n      this.stdout(ps1);\n      let char = this.stdin();\n      while (char) {\n        const idx = char.indexOf('\\n');\n        if (idx >= 0) {\n          input = buffer + char.substr(0, idx + 1);\n          buffer = char.substr(idx + 1);\n          return input;\n        }\n        buffer += char;\n        char = this.stdin();\n      }\n      input = buffer;\n      buffer = '';\n      return input;\n    };\n    // For nodejs, we can do an async prompt atop process.stdin,\n    // unless we're using a custom stdin function.\n    let useProcessStdin = true;\n    if (typeof process === 'undefined') {\n      useProcessStdin = false;\n    } else if (typeof process.stdin === 'undefined') {\n      useProcessStdin = false;\n    } else {\n      if (this.stdin !== devNull.stdin) {\n        if (this.stdin !== pypyjs._defaultStdin) {\n          useProcessStdin = false;\n        } else if (pypyjs.stdin !== devNull.stdin) {\n          useProcessStdin = false;\n        }\n      }\n    }\n    if (useProcessStdin) {\n      _prmpt = (ps1) => {\n        return new Promise((resolve) => {\n          this.stdout(ps1);\n          const slurp = function slurp() {\n            process.stdin.once('readable', () => {\n              let chunk = process.stdin.read();\n              if (chunk === null) {\n                slurp();\n              } else {\n                chunk = chunk.toString();\n                const idx = chunk.indexOf('\\n');\n                if (idx < 0) {\n                  buffer += chunk;\n                  slurp();\n                } else {\n                  resolve(buffer + chunk.substr(0, idx + 1));\n                  buffer = chunk.substr(idx + 1);\n                }\n              }\n            });\n          };\n\n          slurp();\n        });\n      };\n    }\n  }\n\n  // Set up an InteractiveConsole instance,\n  // then loop forever via recursive promises.\n  return this._ready\n    .then(() => this.loadModuleData('code'))\n    .then(() => this._execute_source('import code'))\n    .then(() => this._execute_source('c = code.InteractiveConsole(top_level_scope.__dict__)'))\n    .then(() => this._repl_loop(_prmpt, '>>> '));\n};\n\npypyjs.prototype._repl_loop = function _repl_loop(prmpt, ps1) {\n  // Prompt for input, which may happen via async promise.\n  return Promise.resolve()\n    .then(() => prmpt.call(this, ps1))\n    .then((input) => {\n      // Push it into the InteractiveConsole, a line at a time.\n      let p = Promise.resolve();\n      input.split('\\n').forEach((line) => {\n        // Find any \"import\" statements in the code,\n        // and ensure the modules are ready for loading.\n        if (this.autoLoadModules) {\n          p = p.then(() => this.findImportedNames(line))\n               .then((imports) => this.loadModuleData.apply(this, imports));\n        }\n\n        const code = `r = c.push('${_escape(line)}')`;\n        p = p.then(() => this._execute_source(code));\n      });\n      return p;\n    }).then(() => this.get('r', true))\n      .then((r) => {\n        // If r == 1, we're in a multi-line definition.\n        // Adjust the prompt accordingly.\n        if (r) {\n          return this._repl_loop(prmpt, '... ');\n        }\n        return this._repl_loop(prmpt, '>>> ');\n      });\n};\n\n// Method to look for \"import\" statements in a code string.\n// Returns a promise that will resolve to a list of imported module names.\n//\n// XXX TODO: this is far from complete and should not be done with a regex.\n// Perhaps we can call into python's \"ast\" module for this parsing?\n//\nconst importStatementRE = /(from\\s+([a-zA-Z0-9_\\.]+)\\s+)?import\\s+\\(?\\s*([a-zA-Z0-9_\\.\\*]+(\\s+as\\s+[a-zA-Z0-9_]+)?[ \\t]*,?[ \\t]*)+[ \\t]*\\)?/g;\npypyjs.prototype.findImportedNames = function findImportedNames(code) {\n  const imports = [];\n  let match;\n  importStatementRE.lastIndex = 0;\n\n  const pushImport = (relmod) => (submod) => imports.push(relmod + submod.split(/\\s*as\\s*/)[0]);\n\n  while ((match = importStatementRE.exec(code)) !== null) {\n    let relmod = match[2];\n    if (relmod) {\n      relmod = relmod + '.';\n    } else {\n      relmod = '';\n    }\n\n    let submods = match[0].split('import')[1];\n    while (submods && /[\\s(]/.test(submods.charAt(0))) {\n      submods = submods.substr(1);\n    }\n\n    while (submods && /[\\s)]/.test(submods.charAt(submods.length - 1))) {\n      submods = submods.substr(0, submods.length - 1);\n    }\n\n    submods = submods.split(/\\s*,\\s*/);\n    submods.forEach(pushImport(relmod));\n  }\n  return Promise.resolve(imports);\n};\n\n// Method to load the contents of a python module, along with\n// any dependencies.  This populates the relevant paths within\n// the VMs simulated filesystem so that is can find and import\n// the specified module.\n//\npypyjs.prototype.loadModuleData = function loadModuleData(/* names */) {\n  // Each argument is a name that we want to import.\n  // We must find the longest prefix that is an available module\n  // and load it along with all its dependencies.\n  const modules = Array.prototype.slice.call(arguments);\n  return this._ready.then(() => {\n    const toLoad = {};\n    NEXTNAME: for (let i = 0; i < modules.length; i++) {\n      let name = modules[i];\n\n      // Find the nearest containing module for the given name.\n      // Note that it may not match a module at all, in which case we ignore it.\n      while (true) {\n        if (this._allModules[name]) {\n          break;\n        }\n\n        name = name.substr(0, name.lastIndexOf('.'));\n        if (!name) continue NEXTNAME;\n      }\n\n      this._findModuleDeps(name, toLoad);\n    }\n\n    return Promise.all(Object.keys(toLoad).map((name) => this._loadModuleData(name)));\n  });\n};\n\npypyjs.prototype._findModuleDeps = function _findModuleDeps(name, seen) {\n  const _seen = seen ? seen : {};\n  const deps = [];\n\n  // If we don't know about this module, ignore it.\n  if (!this._allModules[name]) {\n    return _seen;\n  }\n\n  // Depend on any explicitly-named imports.\n  const imports = this._allModules[name].imports;\n  if (imports) {\n    for (let i = 0; i < imports.length; i++) {\n      deps.push(imports[i]);\n    }\n  }\n\n  // Depend on the __init__.py for packages.\n  if (this._allModules[name].dir) {\n    deps.push(name + '.__init__');\n  }\n\n  // Include the parent package, if any.\n  const idx = name.lastIndexOf('.');\n  if (idx !== -1) {\n    deps.push(name.substr(0, idx));\n  }\n\n  // Recurse for any previously-unseen dependencies.\n  _seen[name] = true;\n  for (let i = 0; i < deps.length; i++) {\n    if (!_seen[deps[i]]) {\n      this._findModuleDeps(deps[i], _seen);\n    }\n  }\n\n  return _seen;\n};\n\npypyjs.prototype._loadModuleData = function _loadModuleData(name) {\n  // If we've already loaded this module, we're done.\n  if (this._loadedModules[name]) {\n    return Promise.resolve();\n  }\n\n  // If we're already in the process of loading it, use the existing promise.\n  if (this._pendingModules[name]) {\n    return this._pendingModules[name];\n  }\n\n  // If it's a package directory, there's not actually anything to do.\n  if (this._allModules[name].dir) {\n    return Promise.resolve();\n  }\n\n  // We need to fetch the module file and write it out.\n  const modfile = this._allModules[name].file;\n  const promise = this.fetch(`modules/${modfile}`)\n  .then((xhr) => {\n    const contents = xhr.responseText;\n    this._writeModuleFile(name, contents);\n    delete this._pendingModules[name];\n  });\n  this._pendingModules[name] = promise;\n  return promise;\n};\n\npypyjs.prototype._writeModuleFile = function _writeModuleFile(name, data) {\n  const Module = this._module;\n  const file = this._allModules[name].file;\n\n  // Create the containing directory first.\n  const dir = file.split('/').slice(0, -1).join('/');\n  try {\n    Module.FS_createPath('/lib/pypyjs/lib_pypy', dir, true, false);\n  } catch (err) {\n    console.error(err);\n  }\n\n  // Now we can safely create the file.\n  // To ensure proper utf8 encoding we need to write it as bytes.\n  // XXX TODO: find a way to avoid this overhead.\n  const fullpath = '/lib/pypyjs/lib_pypy/' + file;\n  const len = Module.lengthBytesUTF8(data);\n  const arr = new Uint8Array(len);\n  Module.stringToUTF8Array(data, arr, 0, len + 1);\n  try {\n    this.FS.unlink(fullpath);\n  } catch (err) {\n    if (err.errno !== 2) {\n      console.error(err);\n    }\n  }\n  Module.FS_createDataFile(fullpath, '', arr, true, false, true);\n  this._loadedModules[name] = true;\n};\n\n// An error class for reporting python exceptions back to calling code.\n// XXX TODO: this could be a lot more user-friendly than a opaque error...\n\npypyjs.Error = function pypyjsError(name, message, trace) {\n  let message_ = message;\n  let name_ = name;\n  if (name_ && typeof message_ === 'undefined') {\n    message_ = name_;\n    name_ = '';\n  }\n\n  this.name = name_ || 'pypyjs.Error';\n  this.message = message_ || 'pypyjs Unknown Error';\n  this.trace = trace || '';\n};\n\npypyjs.Error.prototype = new Error();\npypyjs.Error.prototype.constructor = pypyjs.Error;\n\n// XXX TODO: expose the filesystem for manipulation by calling code.\n\n// Add convenience methods directly on the 'pypyjs' function, that\n// will invoke corresponding methods on a default VM instance.\n// This makes it look like 'pypyjs' is a singleton VM instance.\n\npypyjs.stdin = stdio.stdin;\npypyjs.stdout = stdio.stdout;\npypyjs.stderr = stdio.stderr;\n\npypyjs._defaultVM = null;\npypyjs._defaultStdin = function defaultStdin() { return pypyjs.stdin(...arguments); };\npypyjs._defaultStdout = function defaultStdout() { return pypyjs.stdout(...arguments); };\npypyjs._defaultStderr = function defaultStderr() { return pypyjs.stderr(...arguments); };\n\nconst PUBLIC_NAMES = ['ready', 'exec', 'eval', 'execfile', 'get', 'set',\n                      'repl', 'loadModuleData'];\n\nPUBLIC_NAMES.forEach((name) => {\n  pypyjs[name] = function anon() {\n    if (!pypyjs._defaultVM) {\n      pypyjs._defaultVM = new pypyjs({\n        stdin: pypyjs._defaultStdin,\n        stdout: pypyjs._defaultStdout,\n        stderr: pypyjs._defaultStderr\n      });\n    }\n    return pypyjs._defaultVM[name].apply(pypyjs._defaultVM, arguments);\n  };\n});\n\n// For nodejs, run a repl when invoked directly from the command-line.\nif (typeof require !== 'undefined' && typeof module !== 'undefined') {\n  if (require.main === module) {\n    pypyjs.repl().catch((err) => {\n      console.log(err);\n    });\n  }\n}\n\nif (typeof globalScope.pypyjs === 'undefined') {\n  globalScope.pypyjs = pypyjs;\n}\n\nif (typeof module !== 'undefined') {\n  if (typeof module.exports !== 'undefined') {\n    module.exports = pypyjs;\n  }\n}\n"]}